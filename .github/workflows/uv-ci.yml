name: CI/CD with uv Demo

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: "~/.cache/uv"
          key: uv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Run tests with pytest
        run: uv run --with-requirements requirements.txt python -m pytest -v

      - name: Demonstrate uv speed (alternative approach)
        if: failure()
        run: |
          echo "Demonstrating uv's pip functionality:"
          uv pip install pytest rich
          uv run pytest -v

  build:
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: "~/.cache/uv"
          key: uv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Build standalone executable
        shell: bash
        run: |
          set -euo pipefail
          uv run \
            --with pyinstaller \
            --with-requirements requirements.txt \
            python -m PyInstaller \
            app.py \
            --name calculator \
            --onefile \
            --paths src \
            --clean

          case "${{ matrix.os }}" in
            ubuntu-latest) platform="linux" ;;
            macos-latest) platform="macos" ;;
            windows-latest) platform="windows" ;;
            *) platform="${{ matrix.os }}" ;;
          esac

          ext=""
          if [ "$platform" = "windows" ]; then
            ext=".exe"
          fi

          mkdir -p release
          mv "dist/calculator${ext}" "release/calculator-${platform}${ext}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: calculator-${{ matrix.os }}
          path: release/

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          merge-multiple: true

      - name: Generate checksums
        run: |
          cd release
          shasum -a 256 * > SHA256SUMS.txt

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
