name: CI/CD with uv Demo

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            uv-${{ runner.os }}-py${{ matrix.python-version }}-
            uv-${{ runner.os }}-

      - name: Install dependencies
        run: uv pip install -r requirements.txt

      - name: Run tests with pytest
        run: uv run --with pytest python -m pytest -v --tb=short

      - name: Generate coverage report (optional)
        if: matrix.python-version == '3.11'
        run: |
          uv run --with pytest-cov python -m pytest --cov=src --cov-report=xml

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Run ruff for linting
        run: |
          uv run --with ruff python -m ruff check src/ tests/
          uv run --with ruff python -m ruff format --check src/ tests/